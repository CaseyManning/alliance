// This file is auto-generated by @hey-api/openapi-ts
import { formDataBodySerializer } from '@hey-api/client-fetch';
import { client as _heyApiClient } from './client.gen';
export const appHealthCheck = (options) => {
    return (options?.client ?? _heyApiClient).get({
        url: '/',
        ...options
    });
};
export const authLogin = (options) => {
    return (options.client ?? _heyApiClient).post({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/auth/login',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};
export const authAdminLogin = (options) => {
    return (options.client ?? _heyApiClient).post({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/auth/admin/login',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};
export const authRegister = (options) => {
    return (options.client ?? _heyApiClient).post({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/auth/register',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};
export const authRefreshTokens = (options) => {
    return (options?.client ?? _heyApiClient).post({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/auth/refresh',
        ...options
    });
};
export const authMe = (options) => {
    return (options?.client ?? _heyApiClient).get({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/auth/me',
        ...options
    });
};
export const actionsCreate = (options) => {
    return (options.client ?? _heyApiClient).post({
        url: '/actions/create',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};
export const actionsJoin = (options) => {
    return (options.client ?? _heyApiClient).post({
        url: '/actions/join/{id}',
        ...options
    });
};
export const actionsMyStatus = (options) => {
    return (options.client ?? _heyApiClient).get({
        url: '/actions/myStatus/{id}',
        ...options
    });
};
export const actionsFindAll = (options) => {
    return (options?.client ?? _heyApiClient).get({
        url: '/actions',
        ...options
    });
};
export const actionsRemove = (options) => {
    return (options.client ?? _heyApiClient).delete({
        url: '/actions/{id}',
        ...options
    });
};
export const actionsFindOne = (options) => {
    return (options.client ?? _heyApiClient).get({
        url: '/actions/{id}',
        ...options
    });
};
export const actionsUpdate = (options) => {
    return (options.client ?? _heyApiClient).patch({
        url: '/actions/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};
export const communiquesFindAll = (options) => {
    return (options?.client ?? _heyApiClient).get({
        url: '/communiques',
        ...options
    });
};
export const communiquesCreate = (options) => {
    return (options.client ?? _heyApiClient).post({
        url: '/communiques',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};
export const communiquesRemove = (options) => {
    return (options.client ?? _heyApiClient).delete({
        url: '/communiques/{id}',
        ...options
    });
};
export const communiquesFindOne = (options) => {
    return (options.client ?? _heyApiClient).get({
        url: '/communiques/{id}',
        ...options
    });
};
export const communiquesUpdate = (options) => {
    return (options.client ?? _heyApiClient).patch({
        url: '/communiques/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};
export const communiquesGetRead = (options) => {
    return (options.client ?? _heyApiClient).get({
        url: '/communiques/{id}/read',
        ...options
    });
};
export const communiquesRead = (options) => {
    return (options.client ?? _heyApiClient).post({
        url: '/communiques/{id}/read',
        ...options
    });
};
export const imagesUploadImage = (options) => {
    return (options.client ?? _heyApiClient).post({
        ...formDataBodySerializer,
        url: '/images/upload',
        ...options,
        headers: {
            'Content-Type': null,
            ...options?.headers
        }
    });
};
export const imagesGetImage = (options) => {
    return (options.client ?? _heyApiClient).get({
        url: '/images/{filename}',
        ...options
    });
};
export const imagesDeleteImage = (options) => {
    return (options.client ?? _heyApiClient).delete({
        url: '/images/{id}',
        ...options
    });
};
/**
 * Get all forum posts
 */
export const forumFindAllPosts = (options) => {
    return (options?.client ?? _heyApiClient).get({
        url: '/forum/posts',
        ...options
    });
};
/**
 * Create a new forum post
 */
export const forumCreatePost = (options) => {
    return (options.client ?? _heyApiClient).post({
        url: '/forum/posts',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};
/**
 * Get posts for a specific action
 */
export const forumFindPostsByAction = (options) => {
    return (options.client ?? _heyApiClient).get({
        url: '/forum/posts/action/{actionId}',
        ...options
    });
};
/**
 * Delete a post
 */
export const forumRemovePost = (options) => {
    return (options.client ?? _heyApiClient).delete({
        url: '/forum/posts/{id}',
        ...options
    });
};
/**
 * Get a specific post with its replies
 */
export const forumFindOnePost = (options) => {
    return (options.client ?? _heyApiClient).get({
        url: '/forum/posts/{id}',
        ...options
    });
};
/**
 * Update a post
 */
export const forumUpdatePost = (options) => {
    return (options.client ?? _heyApiClient).patch({
        url: '/forum/posts/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};
/**
 * Create a new reply to a post
 */
export const forumCreateReply = (options) => {
    return (options.client ?? _heyApiClient).post({
        url: '/forum/replies',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};
/**
 * Delete a reply
 */
export const forumRemoveReply = (options) => {
    return (options.client ?? _heyApiClient).delete({
        url: '/forum/replies/{id}',
        ...options
    });
};
/**
 * Update a reply
 */
export const forumUpdateReply = (options) => {
    return (options.client ?? _heyApiClient).patch({
        url: '/forum/replies/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};
